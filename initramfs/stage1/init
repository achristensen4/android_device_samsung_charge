#!/stage1/sh
export _PATH="$PATH"
export PATH="/stage1"

mkdir -p /dev/block
mknod -m 0644 /dev/block/bml8 b 137 8
mknod -m 0644 /dev/block/bml9 b 137 9
mknod -m 0644 /dev/block/bml10 b 137 10
mknod -m 0644 /dev/block/stl8 b 138 8
mknod -m 0644 /dev/block/stl9 b 138 9
mknod -m 0644 /dev/block/stl10 b 138 10

mknod -m 0644 /dev/block/mmcblk0 b 179 0
mknod -m 0644 /dev/block/mmcblk0p1 b 179 1
mknod -m 0644 /dev/block/mmcblk0p3 b 179 3

mkdir /cache
mkdir /proc
mkdir /sys

insmod /lib/modules/fsr.ko
insmod /lib/modules/fsr_stl.ko

date >>/boot.txt
exec >>/boot.txt 2>&1
cd /
mount -t proc proc /proc
mount -t sysfs sysfs /sys

rm /init

dd bs=512 if=/dev/block/bml8 of=/stage1/boot.bin

eval $(grep -m 1 -A 1 BOOT_IMAGE_OFFSETS /stage1/boot.bin | tail -n 1)

load_offset=$boot_offset
load_len=$boot_len

mount -t ext4 /dev/block/mmcblk0p3 /cache

if test -e /cache/.startrecovery || grep -q bootmode=2 /proc/cmdline ; then
	# recovery boot
	rm -fr /cache/.startrecovery
	load_offset=$recovery_offset
	load_len=$recovery_len
fi

umount /cache
rm -rf /cache

dd bs=512 if=/stage1/boot.bin skip=$load_offset count=$load_len | zcat | cpio -i

umount /sys
umount /proc
date >> /boot.txt

rm -rf /stage1 
rm -rf /dev/*

export PATH="${_PATH}"

exec /init
